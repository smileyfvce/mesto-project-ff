{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/components/card.js","webpack://mesto-project-ff/./src/components/modal.js","webpack://mesto-project-ff/./src/components/validation.js","webpack://mesto-project-ff/./src/components/api.js","webpack://mesto-project-ff/./src/pages/index.js"],"sourcesContent":["export { createCard };\r\n\r\n// Функция создания карточки\r\n\r\nconst createCard = (\r\n  card,\r\n  userId,\r\n  deleteCard,\r\n  likedCard,\r\n  dislikedCard,\r\n  openImage\r\n) => {\r\n  const cardTemplate = document.querySelector(\"#card-template\").content; // темплейт карточки\r\n\r\n  const placesItem = cardTemplate\r\n\r\n    .querySelector(\".places__item\")\r\n\r\n    .cloneNode(true); // карточка\r\n\r\n  const cardImage = placesItem.querySelector(\".card__image\"); // картинка\r\n\r\n  const cardTitle = placesItem.querySelector(\".card__title\"); // заголовок\r\n\r\n  const deleteButton = placesItem.querySelector(\".card__delete-button\"); // кнопка удаления\r\n\r\n  const likeButton = placesItem.querySelector(\".card__like-button\"); // кнопка лайка\r\n\r\n  const likeCount = placesItem.querySelector(\".card__like-count\"); // счётчик лайка\r\n\r\n  cardTitle.textContent = card.name;\r\n\r\n  cardImage.src = card.link;\r\n\r\n  cardImage.alt = `Фотография места: ${card.name}`;\r\n\r\n  likeCount.textContent = card.likes.length;\r\n\r\n  placesItem.dataset.cardId = card._id;\r\n\r\n  // если карта наша, то слушаем кнопку / если нет то прячем корзину\r\n\r\n  if (card.owner._id === userId) {\r\n    // событие (клик на корзину)\r\n\r\n    deleteButton.addEventListener(\"click\", () => {\r\n      deleteCard(card._id)\r\n        .then(() => {\r\n          placesItem.remove();\r\n        })\r\n\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    });\r\n  } else {\r\n    // прячем\r\n\r\n    deleteButton.remove();\r\n  }\r\n\r\n  // красим наши лайки\r\n\r\n  const isLiked = (likes, userId) => {\r\n    !!!!likes.some((like) => like._id === userId);\r\n  };\r\n\r\n  if (isLiked(card.likes, userId)) {\r\n    likeButton.classList.add(\"card__like-button_is-active\");\r\n  }\r\n\r\n  // событие (клик на кнопку лайка)\r\n\r\n  likeButton.addEventListener(\"click\", () => {\r\n    if (likeButton.classList.contains(\"card__like-button_is-active\")) {\r\n      dislikedCard(card._id)\r\n        .then((elem) => {\r\n          likeButton.classList.add(\"card__like-button_is-active\");\r\n\r\n          likeCount.textContent = elem.likes.lenght;\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    } else {\r\n      likedCard(card._id)\r\n        .then((elem) => {\r\n          likeButton.classList.remove(\"card__like-button_is-active\");\r\n\r\n          likeCount.textContent = elem.likes.lenght;\r\n        })\r\n\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  });\r\n\r\n  // событие (клик на картинку)\r\n\r\n  cardImage.addEventListener(\"click\", () => {\r\n    openImage(card.name, card.link);\r\n  });\r\n\r\n  return placesItem;\r\n};\r\n","export { openModal, closeModal };\r\n\r\n// функция открытия попапа\r\n\r\nconst openModal = (popupItem) => {\r\n  popupItem.classList.add(\"popup_is-opened\");\r\n  popupItem.classList.add(\"popup_is-animated\");\r\n  document.addEventListener(\"keydown\", closeEscape);\r\n  popupItem.addEventListener(\"mousedown\", closeOverlay);\r\n}\r\n\r\n// функция закрытия попапа\r\n\r\nconst closeModal = (popupItem) => {\r\n  popupItem.classList.remove(\"popup_is-opened\");\r\n  document.removeEventListener(\"keydown\", closeEscape);\r\n  popupItem.removeEventListener(\"mousedown\", closeOverlay);\r\n}\r\n\r\n// закрыть через Esc\r\n\r\nconst closeEscape = (evt) => {\r\n  if (evt.key === \"Escape\") {\r\n    const openClassModal = document.querySelector(\".popup_is-opened\");\r\n    closeModal(openClassModal);\r\n  }\r\n}\r\n\r\n// закрыть по оверлею\r\n\r\nconst closeOverlay = (evt) => {\r\n  if (evt.target === evt.currentTarget) {\r\n    closeModal(evt.currentTarget);\r\n  }\r\n}\r\n","// Настройки валидации\r\nconst validationConfig = {\r\n  formSelector: \".popup__form\",\r\n  inputSelector: \".popup__input\",\r\n  submitButtonSelector: \".popup__button\",\r\n  inactiveButtonClass: \"popup__button_disabled\",\r\n  inputErrorClass: \"popup__input_type_error\",\r\n  errorClass: \"popup__error_visible\",\r\n};\r\n\r\n// функция сообщения ошибки\r\nconst showInputError = (\r\n  formElement,\r\n  inputElement,\r\n  errorMessage,\r\n  validationObj\r\n) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  inputElement.classList.add(validationObj.inputErrorClass);\r\n  errorElement.textContent = errorMessage;\r\n  errorElement.classList.add(validationObj.errorClass);\r\n};\r\n\r\n// функция очистки ошибок\r\nconst hideInputError = (formElement, inputElement, validationObj) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  inputElement.classList.remove(validationObj.inputErrorClass);\r\n  errorElement.classList.remove(validationObj.errorClass);\r\n  errorElement.textContent = \"\";\r\n};\r\n\r\n// функция проверки валидности\r\nconst isValid = (formElement, inputElement, validationObj) => {\r\n  if (inputElement.validity.patternMismatch) {\r\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\r\n  } else {\r\n    inputElement.setCustomValidity(\"\");\r\n  }\r\n\r\n  if (!inputElement.validity.valid) {\r\n    showInputError(\r\n      formElement,\r\n      inputElement,\r\n      inputElement.validationMessage,\r\n      validationObj\r\n    );\r\n  } else {\r\n    hideInputError(formElement, inputElement, validationObj);\r\n  }\r\n};\r\n\r\n// функция проверки перед отправкой\r\nconst hasInvalidInput = (inputList) => {\r\n  return inputList.some((inputElement) => {\r\n    return !inputElement.validity.valid;\r\n  });\r\n};\r\n\r\n// функция управления состоянии кнопки\r\nconst toggleButtonState = (inputList, buttonElement, validationObj) => {\r\n  if (hasInvalidInput(inputList)) {\r\n    buttonElement.disabled = true;\r\n    buttonElement.classList.add(validationObj.inactiveButtonClass);\r\n  } else {\r\n    buttonElement.disabled = false;\r\n    buttonElement.classList.remove(validationObj.inactiveButtonClass);\r\n  }\r\n};\r\n\r\nconst setEventListener = (formElement, validationObj) => {\r\n  const inputList = Array.from(\r\n    formElement.querySelectorAll(validationObj.inputSelector)\r\n  );\r\n  const buttonElement = formElement.querySelector(\r\n    validationObj.submitButtonSelector\r\n  );\r\n\r\n  toggleButtonState(inputList, buttonElement, validationObj);\r\n\r\n  inputList.forEach((inputElement) => {\r\n    inputElement.addEventListener(\"input\", () => {\r\n      isValid(formElement, inputElement, validationObj);\r\n      toggleButtonState(inputList, buttonElement, validationObj);\r\n    });\r\n  });\r\n};\r\n\r\nconst enableValidation = (validationObj) => {\r\n  const formList = Array.from(\r\n    document.querySelectorAll(validationObj.formSelector)\r\n  );\r\n  formList.forEach((formElement) => {\r\n    setEventListener(formElement, validationObj);\r\n  });\r\n};\r\n\r\n// Функция очистки валидации формы\r\nconst clearValidation = (formElement, validationObj) => {\r\n  const inputList = Array.from(\r\n    formElement.querySelectorAll(validationObj.inputSelector)\r\n  );\r\n  const buttonElement = formElement.querySelector(\r\n    validationObj.submitButtonSelector\r\n  );\r\n\r\n  inputList.forEach((inputElement) => {\r\n    hideInputError(formElement, inputElement, validationObj);\r\n    inputElement.setCustomValidity(\"\");\r\n  });\r\n\r\n  toggleButtonState(inputList, buttonElement, validationObj);\r\n};\r\n\r\nexport { enableValidation, clearValidation, validationConfig };","export {\r\n  getCards,// вывести карточку\r\n  getUserInfo, // вывести информацию\r\n  updateUserInfo, // обновить информацию\r\n  postNewCard, // добавить новую карточку на сервер\r\n  deleteCardFromServer, // удалить карточку с сервера\r\n  putLike, // добавить лайк в массив\r\n  deleteLike, // удалить лайк из массива\r\n  updateAvatar, // обновить аватар\r\n};\r\n\r\nconst config = {\r\n  baseUrl: \"https://nomoreparties.co/v1/wff-cohort-42\",\r\n  headers: {\r\n    authorization: \"7d693a10-239b-4e8a-9e6c-5ec746eb9fb2\",\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n};\r\n\r\n// Получение ответа от сервера\r\n\r\nconst checkResponse = (res) => {\r\n  if (res.ok) {\r\n    return res.json();\r\n  }\r\n  // если ошибка, отклоняем промисы\r\n  return Promise.reject(`Ошибка: ${res.status}`);\r\n};\r\n\r\n// Получаем информацию о пользователе\r\n\r\nconst getUserInfo = () => {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    headers: config.headers,\r\n  }).then(checkResponse);\r\n};\r\n\r\n// Получаем карточки с сервера\r\n\r\nconst getCards = () => {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    headers: config.headers,\r\n  }).then(checkResponse);\r\n};\r\n\r\n// Обновление информации профиля\r\n\r\nconst updateUserInfo = (info) => {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    method: \"PATCH\",\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      name: info.name,\r\n      about: info.about,\r\n    }),\r\n  }).then(checkResponse);\r\n};\r\n\r\n// Создание новой карточки\r\n\r\nconst postNewCard = (card) => {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    method: \"POST\",\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      name: card.name,\r\n      link: card.link,\r\n    }),\r\n  }).then(checkResponse);\r\n};\r\n\r\n// Удаление карточки\r\n\r\nconst deleteCardFromServer = (cardId) => {\r\n  return fetch(`${config.baseUrl}/cards/${cardId}`, {\r\n    method: \"DELETE\",\r\n    headers: config.headers,\r\n  }).then(checkResponse);\r\n};\r\n\r\n// Получаем лайки\r\n\r\nconst putLike = (cardId) => {\r\n  return fetch(`${config.baseUrl}/cards/${cardId}/likes`, {\r\n    method: \"PUT\",\r\n    headers: config.headers,\r\n  }).then(checkResponse);\r\n};\r\n\r\n// Удаление лайка\r\n\r\nconst deleteLike = (cardId) => {\r\n  return fetch(`${config.baseUrl}/likes/${cardId}`, {\r\n    method: \"DELETE\",\r\n    headers: config.headers,\r\n  }).then(checkResponse);\r\n};\r\n\r\n// Обновление аватара\r\n\r\nconst updateAvatar = (link) => {\r\n  return fetch(`${config.baseUrl}/users/me/avatar`, {\r\n    method: \"PATCH\",\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      avatar: link,\r\n    }),\r\n  }).then(checkResponse);\r\n};\r\n","import \"./index.css\";\r\n\r\n// Импорт функций\r\nimport { createCard } from \"../components/card.js\";\r\nimport { openModal, closeModal } from \"../components/modal.js\";\r\nimport {\r\n  enableValidation,\r\n  clearValidation,\r\n  validationConfig,\r\n} from \"../components/validation.js\";\r\nimport {\r\n  getCards, // вывести карточку\r\n  getUserInfo, // вывести информацию\r\n  updateUserInfo, // обновить информацию\r\n  postNewCard, // добавить новую карточку на сервер\r\n  deleteCardFromServer, // удалить карточку с сервера\r\n  putLike, // добавить лайк в массив\r\n  deleteLike, // удалить лайк из массива\r\n  updateAvatar, // обновить аватар\r\n} from \"../components/api.js\";\r\n\r\n// DOM узлы\r\nconst placesList = document.querySelector(\".places__list\");\r\nlet userId;\r\n\r\n// попапы\r\nconst popupAvatar = document.querySelector(\".popup_type_avatar\");\r\nconst popupEditProfile = document.querySelector(\".popup_type_edit\");\r\nconst popupAddNewCard = document.querySelector(\".popup_type_new-card\");\r\nconst popupImage = document.querySelector(\".popup_type_image\");\r\n\r\n// элементы попапов\r\nconst profileName = document.querySelector(\".profile__title\");\r\nconst profileJob = document.querySelector(\".profile__description\");\r\nconst imageCard = document.querySelector(\".popup__image\");\r\nconst captionCard = document.querySelector(\".popup__caption\");\r\n\r\n// формы и инпуты\r\nconst avatarForm = document.forms[\"avatar\"];\r\nconst formEditProfile = document.forms[\"edit-profile\"];\r\nconst formAddCard = document.forms[\"new-place\"];\r\nconst avatarInput = document.querySelector(\".popup__input_type_avatar-url\");\r\nconst nameInput = document.querySelector(\".popup__input_type_name\");\r\nconst jobInput = document.querySelector(\".popup__input_type_description\");\r\nconst popupInputCardName = document.querySelector(\r\n  \".popup__input_type_card-name\"\r\n);\r\nconst popupInputUrl = document.querySelector(\".popup__input_type_url\");\r\n\r\n// кнопки\r\nconst editAvatarButton = document.querySelector(\".profile__image\");\r\nconst profileEditBtn = document.querySelector(\".profile__edit-button\");\r\nconst cardAddBtn = document.querySelector(\".profile__add-button\");\r\nconst popupCloseBtns = document.querySelectorAll(\".popup__close\");\r\n\r\n// вызов включения валидации\r\nenableValidation(validationConfig);\r\n\r\n// функция отображения загрузки на кнопке\r\nconst loadBtn = (elem, load) => {\r\n  const btn = elem.querySelector(\".popup__button\");\r\n  if (load) {\r\n    btn.textContent = \"Сохранение...\";\r\n  } else {\r\n    btn.textContent = \"Сохранить\";\r\n  }\r\n};\r\n\r\n// наполнение редактора профиля\r\n\r\nconst profileInfo = () => {\r\n  nameInput.value = profileName.textContent;\r\n  jobInput.value = profileJob.textContent;\r\n};\r\n\r\n// функция редактирования аватара\r\n\r\nconst editAvatar = (evt) => {\r\n  evt.preventDefault();\r\n  loadBtn(evt.target, true);\r\n  const link = avatarInput.value;\r\n  updateAvatar({\r\n    link,\r\n  })\r\n    .then((user) => {\r\n      editAvatarButton.style.backgroundImage = `url(${user.avatar})`;\r\n      closeModal(popupAvatar);\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    })\r\n    .finally(() => {\r\n      loadBtn(evt.target, false);\r\n    });\r\n};\r\n\r\n// функция редактирования профиля\r\n\r\nconst editProfileInfo = (evt) => {\r\n  evt.preventDefault();\r\n  loadBtn(evt.target, true);\r\n  const newInfo = {\r\n    name: nameInput.value,\r\n    about: jobInput.value,\r\n  };\r\n  updateUserInfo(newInfo)\r\n    .then((user) => {\r\n      profileName.textContent = user.name;\r\n      profileJob.textContent = user.about;\r\n    })\r\n    .catch((err) => console.log(err))\r\n    .finally(() => {\r\n      loadBtn(evt.target, false);\r\n    });\r\n};\r\n\r\n// функция добавления новой карточки\r\n\r\nconst addNewCard = (evt) => {\r\n  evt.preventDefault();\r\n  loadBtn(evt.target, true);\r\n  const newCard = {\r\n    name: popupInputCardName.value,\r\n    link: popupInputUrl.value,\r\n  };\r\n  postNewCard(newCard)\r\n    .then((card) => {\r\n      const cardItem = createCard(\r\n        card,\r\n        userId,\r\n        deleteCardFromServer,\r\n        putLike,\r\n        deleteLike,\r\n        openImage\r\n      );\r\n      placesList.prepend(cardItem);\r\n      closeModal(popupAddNewCard);\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    })\r\n    .finally(() => {\r\n      loadBtn(evt.target, false);\r\n    });\r\n};\r\n\r\n// функция открытия картинки\r\nfunction openImage(name, link) {\r\n  imageCard.alt = name;\r\n  imageCard.src = link;\r\n  captionCard.textContent = name;\r\n  openModal(popupImage);\r\n}\r\n\r\nPromise.all([getUserInfo(), getCards()])\r\n  .then(([user, cardsData]) => {\r\n    // информация о пользователе\r\n    userId = user._id;\r\n    profileName.textContent = user.name;\r\n    profileJob.textContent = user.about;\r\n    editAvatarButton.style.backgroundImage = `url(${user.avatar})`;\r\n    // карточки\r\n    cardsData.forEach((card) => {\r\n      placesList.append(\r\n        createCard(\r\n          card,\r\n          userId,\r\n          deleteCardFromServer,\r\n          putLike,\r\n          deleteLike,\r\n          openImage\r\n        )\r\n      );\r\n    });\r\n  })\r\n  .catch((err) => {\r\n    console.log(err);\r\n  });\r\n\r\n// СОБЫТИЯ\r\n\r\n//КЛИК\r\n// кнопка редактора аватара\r\neditAvatarButton.addEventListener(\"click\", () => {\r\n  openModal(popupAvatar);\r\n  clearValidation(avatarForm, validationConfig);\r\n});\r\n// кнопка редактора профиля\r\nprofileEditBtn.addEventListener(\"click\", () => {\r\n  openModal(popupEditProfile);\r\n  profileInfo();\r\n  clearValidation(formEditProfile, validationConfig);\r\n});\r\n// кнопка добавления карточки\r\ncardAddBtn.addEventListener(\"click\", () => {\r\n  openModal(popupAddNewCard);\r\n  formAddCard.reset();\r\n  clearValidation(formAddCard, validationConfig);\r\n});\r\n// кнопка закрытия попапов\r\npopupCloseBtns.forEach((button) => {\r\n  button.addEventListener(\"click\", () => {\r\n    const popupItem = button.closest(\".popup\");\r\n    closeModal(popupItem);\r\n  });\r\n});\r\n\r\n// САБМИТ\r\n// форма редактора аватара\r\navatarForm.addEventListener(\"submit\", editAvatar);\r\n// форма редактора профиля\r\nformEditProfile.addEventListener(\"submit\", editProfileInfo);\r\n// форма добавления карточки\r\nformAddCard.addEventListener(\"submit\", addNewCard);\r\n"],"names":["createCard","card","userId","deleteCard","likedCard","dislikedCard","openImage","placesItem","document","querySelector","content","cloneNode","cardImage","cardTitle","deleteButton","likeButton","likeCount","textContent","name","src","link","alt","concat","likes","length","dataset","cardId","_id","owner","addEventListener","then","remove","catch","err","console","log","some","like","isLiked","classList","add","contains","elem","lenght","openModal","popupItem","closeEscape","closeOverlay","closeModal","removeEventListener","evt","key","openClassModal","target","currentTarget","validationConfig","formSelector","inputSelector","submitButtonSelector","inactiveButtonClass","inputErrorClass","errorClass","hideInputError","formElement","inputElement","validationObj","errorElement","id","toggleButtonState","inputList","buttonElement","validity","valid","hasInvalidInput","disabled","clearValidation","Array","from","querySelectorAll","forEach","setCustomValidity","config","baseUrl","headers","authorization","checkResponse","res","ok","json","Promise","reject","status","deleteCardFromServer","fetch","method","putLike","deleteLike","placesList","popupAvatar","popupEditProfile","popupAddNewCard","popupImage","profileName","profileJob","imageCard","captionCard","avatarForm","forms","formEditProfile","formAddCard","avatarInput","nameInput","jobInput","popupInputCardName","popupInputUrl","editAvatarButton","profileEditBtn","cardAddBtn","popupCloseBtns","patternMismatch","errorMessage","showInputError","validationMessage","isValid","setEventListener","loadBtn","load","all","_ref","_ref2","user","cardsData","about","style","backgroundImage","avatar","append","value","reset","button","closest","preventDefault","body","JSON","stringify","finally","info","cardItem","prepend"],"sourceRoot":""}